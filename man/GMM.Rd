% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FeA.R
\name{GMM}
\alias{GMM}
\title{Gaussian Mixture Model for unbinned data}
\usage{
GMM(vec, comp_num = 2, sub_pops = c(1, comp_num))
}
\arguments{
\item{vec}{One-dimensional numeric vector or data frame.}

\item{comp_num}{Number of Gaussian components to be used for the mixture.}

\item{sub_pops}{A two-element integer vector containing the indexes of the
two GMM components to intersect for boundary computation.}
}
\value{
A named list with the following elements:
\describe{
\item{\code{fit}}{An object of class 'Mclust' providing the GMM estimation.}
\item{\code{x}}{A 1000-point numeric vector providing the x-values used
to evaluate the components. Useful for plotting.}
\item{\code{components}}{A 1000 x \code{comp_num} data frame featuring the
probability-weighted Gaussian components evaluated in
x.}
\item{\code{boundary}}{The decision boundary computed as the intersection
between the two Gaussian components specified in the
\code{sub_pops} argument.}
}
}
\description{
This is a wrapper for the \code{Mclust} function (\code{mclust} package)
which uses Gaussian Mixture Models (GMMs) to fit the data
distribution. Here, GMMs are primarily used to analyze
expression data (from both microarray and RNA-Seq experiments)
and to identify possible expression subpopulations (i.e.,
separating expressed from unexpressed genes). \code{GMM} function
returns the values of the individual probability-weighted
Gaussian mixture components and a boundary value suitable for
subpopulation separation. Expected input data are unbinned
expression values, usually log2-transformed (not their
probability density finction!).
\strong{NOTE:} when analyzing counts, it is better to remove 0s first.
}
\details{
The decision boundary is computed from the intersection of the two
GMM components specified in the \code{sub_pops} input argument. To find
such a point, two probability-weighted Gaussian functions with
unequal variances need to be equated, namely
\deqn{\frac{P_1}{\sqrt{2\pi}\sigma_1}
               e^{-\left(\mu_1-x\right)^2/2\sigma_{1}^{2}}=
               \frac{P_2}{\sqrt{2\pi}\sigma_2}
               e^{-\left(\mu_2-x\right)^2/2\sigma_{2}^{2}}}
\deqn{e^{\left(\mu_2-x\right)^2/2\sigma_{2}^{2}-
               \left(\mu_1-x\right)^2/2\sigma_{1}^{2}}=
               \frac{P_2\sigma_1}{P_1\sigma_2}}
\deqn{\frac{\sigma_{1}^{2}\left(\mu_2-x\right)^2-
               \sigma_{2}^{2}\left(\mu_1-x\right)^2}
               {\sigma_{2}^{2}\sigma_{1}^{2}}=
               2\ln{\frac{P_2\sigma_1}{P_1\sigma_2}}}
\deqn{x^2\left(\sigma_{1}^{2}-\sigma_{2}^{2}\right)-
               2x\left(\sigma_{1}^{2}\mu_2-\sigma_{2}^{2}\mu_1\right)+
               \sigma_{1}^{2}\mu_{2}^{2}-\sigma_{2}^{2}\mu_{1}^{2}-
               2\sigma_{1}^{2}\sigma_{2}^{2}
               \ln{\frac{P_2\sigma_1}{P_1\sigma_2}}=0}
\deqn{x_{1,2}=\frac{-B/2\ \pm\ \sqrt{\left(B/2\right)^2-AC}}{A}}
\deqn{\left\{
                 \begin{aligned}
                   A    &= \sigma_{1}^{2}-\sigma_{2}^{2} \\
                   -B/2 &= \sigma_{1}^{2}\mu_2-\sigma_{2}^{2}\mu_1 \\
                   C    &= \sigma_{1}^{2}\mu_{2}^{2}-
                           \sigma_{2}^{2}\mu_{1}^{2}-
                           2\sigma_{1}^{2}\sigma_{2}^{2}
                           \ln{\frac{P_2\sigma_1}{P_1\sigma_2}}
                 \end{aligned}
               \right.}
The last equations show that it is possible to have one single root
(i.e., one intersection point) only when
\eqn{\sigma_{1}=\sigma_{2}} (but \eqn{\mu_1\neq\mu_2}), in which
case the boundary is found at
\deqn{x=\frac{\mu_1+\mu_2}{2}+
               \frac{\sigma^2}{\mu_1-\mu_2}\ln\frac{P_2}{P_1}}
On the contrary, whenever \eqn{\sigma_{1}\neq\sigma_{2}}, solutions
are always two (although they can be real-valued, complex conjugates,
or a double root).
Provided that the solutions are real-valued, \code{GMM} function returns
\emph{the highest intersection point} as the decision boundary, namely
\deqn{\begin{aligned}
                 \argmax_{x\in\left\{x_{1},x_{2}\right\}}
                 \frac{P_i}{\sqrt{2\pi}\sigma_i}
                 e^{-\left(\mu_i-x\right)^2/2\sigma_{i}^{2}\ \ \ \ \ 
                 \text{with}\ \ i=1\ \vee\ i=2}
               \end{aligned}}
}
\examples{
log_expression <- DEGs_expr$`Anti-TNFa_4`
plot(density(DEGs_expr$`Anti-TNFa_4`), main = "Kernel Density Plot")

gmm <- GMM(log_expression, comp_num = 3, sub_pops = c(1,2))

for (i in 1:gmm$fit$G) {
  lines(gmm$x, gmm$components[,i], col = "blue")
}
lines(gmm$x, rowSums(gmm$components), col = "red", lty = 2)
lines(c(gmm$boundary, gmm$boundary), c(0, 1), lty = 2)
}
\author{
FeA.R
}
